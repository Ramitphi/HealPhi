import { Room } from '@huddle01/web-core';
import { RoomEvents, RoomStates } from '@huddle01/web-core/types';

declare const useRoom: (props?: {
    onJoin?: ((data: {
        room: Room;
    }) => void) | undefined;
    onWaiting?: ((data: RoomEvents['room-waiting'][0]) => void) | undefined;
    onLeave?: ((data: RoomEvents['room-closed'][0]) => void) | undefined;
    onFailed?: ((data: RoomEvents['room-joined-failed'][0]) => void) | undefined;
    onPeerJoin?: ((peerId: string) => void) | undefined;
    onPeerLeft?: ((peerId: string) => void) | undefined;
} | undefined) => {
    room: Room;
    state: RoomStates;
    joinRoom: (data: {
        roomId: string;
        token: string;
    }) => Promise<Room>;
    leaveRoom: () => void;
    closeRoom: () => void;
    kickPeer: (peerId: string) => void;
    muteEveryone: () => void;
    closeStreamOfLabel: (data: {
        label: string;
        peerIds?: string[] | undefined;
    }) => void;
};

export { useRoom };
