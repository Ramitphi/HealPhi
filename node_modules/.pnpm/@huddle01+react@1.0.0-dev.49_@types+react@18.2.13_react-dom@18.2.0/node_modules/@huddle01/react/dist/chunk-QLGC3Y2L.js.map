{"version":3,"sources":["../src/hooks/useRemoteScreenShare.ts"],"sourcesContent":["import { useRemoteMedia } from './useRemoteMedia';\n\nexport const useRemoteScreenShare = (props: {\n  peerId: string;\n  onClose?: () => void;\n  onPlayable?: (data: {\n    track: MediaStreamTrack;\n    stream: MediaStream;\n    label: 'screen-share-video' | 'screen-share-audio';\n  }) => void;\n}) => {\n  const {\n    state,\n    stream: videoStream,\n    track: videoTrack,\n  } = useRemoteMedia({\n    label: 'screen-share-video',\n    peerId: props.peerId,\n    onClose: props.onClose,\n    onPlayable: (data) => {\n      props.onPlayable?.({\n        label: 'screen-share-video',\n        track: data.track,\n        stream: data.stream,\n      });\n    },\n  });\n\n  const { stream: audioStream, track: audioTrack } = useRemoteMedia({\n    label: 'screen-share-audio',\n    peerId: props.peerId,\n    onClose: props.onClose,\n    onPlayable: (data) => {\n      props.onPlayable?.({\n        label: 'screen-share-audio',\n        track: data.track,\n        stream: data.stream,\n      });\n    },\n  });\n\n  return {\n    videoStream,\n    audioStream,\n    videoTrack,\n    audioTrack,\n    state,\n  };\n};\n"],"mappings":";;;;;AAEO,IAAM,uBAAuB,CAAC,UAQ/B;AACJ,QAAM;AAAA,IACJ;AAAA,IACA,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,IAAI,eAAe;AAAA,IACjB,OAAO;AAAA,IACP,QAAQ,MAAM;AAAA,IACd,SAAS,MAAM;AAAA,IACf,YAAY,CAAC,SAAS;AACpB,YAAM,aAAa;AAAA,QACjB,OAAO;AAAA,QACP,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK;AAAA,MACf,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAED,QAAM,EAAE,QAAQ,aAAa,OAAO,WAAW,IAAI,eAAe;AAAA,IAChE,OAAO;AAAA,IACP,QAAQ,MAAM;AAAA,IACd,SAAS,MAAM;AAAA,IACf,YAAY,CAAC,SAAS;AACpB,YAAM,aAAa;AAAA,QACjB,OAAO;AAAA,QACP,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK;AAAA,MACf,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":[]}