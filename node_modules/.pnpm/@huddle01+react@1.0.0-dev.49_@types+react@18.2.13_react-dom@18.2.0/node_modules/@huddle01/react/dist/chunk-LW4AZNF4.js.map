{"version":3,"sources":["../src/hooks/useRemoteMedia.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useRoom } from './useRoom';\nimport useHuddle01 from './useHuddle01';\n\nimport { Consumer, RemotePeer } from '@huddle01/web-core';\n\nimport type { NewPeerJoined } from '@huddle01/web-core/types';\n\nexport const useRemoteMedia = (props: {\n  peerId: string;\n  label: string;\n  onClose?: () => void;\n  onPlayable?: (data: {\n    track: MediaStreamTrack;\n    stream: MediaStream;\n    label: string;\n  }) => void;\n  onStopped?: (reason?: { code: number; tag: string; message: string }) => void;\n}) => {\n  const { label, peerId } = props;\n\n  const { room } = useRoom();\n\n  const { huddleClient } = useHuddle01();\n\n  const localPeer = huddleClient.localPeer;\n\n  const [remotePeer, setRemotePeer] = useState<RemotePeer | null>(\n    room.remotePeers.get(peerId) || null,\n  );\n\n  const labelData = remotePeer?.getLabelData(label);\n\n  const [consumers, setConsumers] = useState(remotePeer?.getConsumer(label));\n\n  const [state, setState] = useState<\n    'playable' | 'unavailable' | 'stopped' | 'paused' | 'available'\n  >(() => {\n    if (consumers?.state) return consumers.state;\n    if (labelData) return 'available';\n    else return 'unavailable';\n  });\n\n  const startConsuming = () => {\n    const startedConsuming = localPeer.consume({ label, peerId, appData: {} });\n\n    return startedConsuming;\n  };\n\n  const stopConsuming = () => {\n    const stoppedConsuming = localPeer.stopConsuming({\n      label,\n      peerId,\n    });\n\n    return stoppedConsuming;\n  };\n\n  useEffect(() => {\n    const handleNewPeerJoined = (data: NewPeerJoined) => {\n      if (data.peer.peerId === peerId) {\n        setRemotePeer(data.peer);\n      }\n    };\n\n    const handleStreamAvailable = (data: {\n      label: string;\n      labelData: {\n        producerId: string;\n      };\n    }) => {\n      if (data.label === label) {\n        setState('available');\n      }\n    };\n\n    const handleStreamPlayable = (data: {\n      label: string;\n      consumer: Consumer;\n    }) => {\n      if (data.label === label) {\n        setState('playable');\n\n        setConsumers(data.consumer);\n\n        if (props.onPlayable) {\n          const track = data.consumer.track;\n          if (track) {\n            props.onPlayable({\n              track,\n              label,\n              stream: new MediaStream([track]),\n            });\n          }\n        }\n      }\n    };\n\n    const handleStreamClosed = (data: { label: string }) => {\n      if (data.label === props.label) {\n        setState('unavailable');\n\n        setConsumers(null);\n\n        if (props?.onClose) {\n          props?.onClose();\n        }\n      }\n    };\n\n    room.on('new-peer-joined', handleNewPeerJoined);\n\n    remotePeer?.on('stream-available', handleStreamAvailable);\n\n    remotePeer?.on('stream-playable', handleStreamPlayable);\n\n    remotePeer?.on('stream-closed', handleStreamClosed);\n\n    return () => {\n      room.off('new-peer-joined', handleNewPeerJoined);\n\n      remotePeer?.off('stream-available', handleStreamAvailable);\n\n      remotePeer?.off('stream-playable', handleStreamPlayable);\n\n      remotePeer?.off('stream-closed', handleStreamClosed);\n    };\n  }, [remotePeer, consumers, state]);\n\n  const track = consumers?.track || null;\n\n  let stream: MediaStream | null = null;\n\n  if (track) {\n    stream = new MediaStream();\n    stream.addTrack(track);\n  }\n\n  return { state, track, stream, stopConsuming, startConsuming };\n};\n"],"mappings":";;;;;;;;AAAA,SAAS,WAAW,gBAAgB;AAQ7B,IAAM,iBAAiB,CAAC,UAUzB;AACJ,QAAM,EAAE,OAAO,OAAO,IAAI;AAE1B,QAAM,EAAE,KAAK,IAAI,QAAQ;AAEzB,QAAM,EAAE,aAAa,IAAI,oBAAY;AAErC,QAAM,YAAY,aAAa;AAE/B,QAAM,CAAC,YAAY,aAAa,IAAI;AAAA,IAClC,KAAK,YAAY,IAAI,MAAM,KAAK;AAAA,EAClC;AAEA,QAAM,YAAY,YAAY,aAAa,KAAK;AAEhD,QAAM,CAAC,WAAW,YAAY,IAAI,SAAS,YAAY,YAAY,KAAK,CAAC;AAEzE,QAAM,CAAC,OAAO,QAAQ,IAAI,SAExB,MAAM;AACN,QAAI,WAAW;AAAO,aAAO,UAAU;AACvC,QAAI;AAAW,aAAO;AAAA;AACjB,aAAO;AAAA,EACd,CAAC;AAED,QAAM,iBAAiB,MAAM;AAC3B,UAAM,mBAAmB,UAAU,QAAQ,EAAE,OAAO,QAAQ,SAAS,CAAC,EAAE,CAAC;AAEzE,WAAO;AAAA,EACT;AAEA,QAAM,gBAAgB,MAAM;AAC1B,UAAM,mBAAmB,UAAU,cAAc;AAAA,MAC/C;AAAA,MACA;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AAEA,YAAU,MAAM;AACd,UAAM,sBAAsB,CAAC,SAAwB;AACnD,UAAI,KAAK,KAAK,WAAW,QAAQ;AAC/B,sBAAc,KAAK,IAAI;AAAA,MACzB;AAAA,IACF;AAEA,UAAM,wBAAwB,CAAC,SAKzB;AACJ,UAAI,KAAK,UAAU,OAAO;AACxB,iBAAS,WAAW;AAAA,MACtB;AAAA,IACF;AAEA,UAAM,uBAAuB,CAAC,SAGxB;AACJ,UAAI,KAAK,UAAU,OAAO;AACxB,iBAAS,UAAU;AAEnB,qBAAa,KAAK,QAAQ;AAE1B,YAAI,MAAM,YAAY;AACpB,gBAAMA,SAAQ,KAAK,SAAS;AAC5B,cAAIA,QAAO;AACT,kBAAM,WAAW;AAAA,cACf,OAAAA;AAAA,cACA;AAAA,cACA,QAAQ,IAAI,YAAY,CAACA,MAAK,CAAC;AAAA,YACjC,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,UAAM,qBAAqB,CAAC,SAA4B;AACtD,UAAI,KAAK,UAAU,MAAM,OAAO;AAC9B,iBAAS,aAAa;AAEtB,qBAAa,IAAI;AAEjB,YAAI,OAAO,SAAS;AAClB,iBAAO,QAAQ;AAAA,QACjB;AAAA,MACF;AAAA,IACF;AAEA,SAAK,GAAG,mBAAmB,mBAAmB;AAE9C,gBAAY,GAAG,oBAAoB,qBAAqB;AAExD,gBAAY,GAAG,mBAAmB,oBAAoB;AAEtD,gBAAY,GAAG,iBAAiB,kBAAkB;AAElD,WAAO,MAAM;AACX,WAAK,IAAI,mBAAmB,mBAAmB;AAE/C,kBAAY,IAAI,oBAAoB,qBAAqB;AAEzD,kBAAY,IAAI,mBAAmB,oBAAoB;AAEvD,kBAAY,IAAI,iBAAiB,kBAAkB;AAAA,IACrD;AAAA,EACF,GAAG,CAAC,YAAY,WAAW,KAAK,CAAC;AAEjC,QAAM,QAAQ,WAAW,SAAS;AAElC,MAAI,SAA6B;AAEjC,MAAI,OAAO;AACT,aAAS,IAAI,YAAY;AACzB,WAAO,SAAS,KAAK;AAAA,EACvB;AAEA,SAAO,EAAE,OAAO,OAAO,QAAQ,eAAe,eAAe;AAC/D;","names":["track"]}