{"version":3,"sources":["../src/hooks/useDataMessage.ts"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nimport useHuddle01 from './useHuddle01';\nimport type {\n  TDataMessage,\n  TVolatileDataMessage,\n} from 'types/dist/common.types';\n\nexport const useDataMessage = (props?: {\n  onMessage?: (payload: string, from: string, label?: string) => void;\n  onVolatileMesssage?: (data: TVolatileDataMessage) => void;\n}) => {\n  const { huddleClient } = useHuddle01();\n\n  const localPeer = huddleClient.localPeer;\n\n  const sendData = localPeer.sendData;\n\n  const handleNewMessage = useCallback(\n    (data: TDataMessage) => {\n      if (props?.onMessage)\n        props.onMessage(data.payload, data.from, data.label);\n    },\n    [props?.onMessage],\n  );\n\n  useEffect(() => {\n    localPeer.on('receive-data', handleNewMessage);\n\n    return () => {\n      localPeer.off('receive-data', handleNewMessage);\n    };\n  }, [props?.onMessage]);\n\n  return {\n    sendData,\n  };\n};\n"],"mappings":";;;;;AAAA,SAAS,aAAa,iBAAiB;AAOhC,IAAM,iBAAiB,CAAC,UAGzB;AACJ,QAAM,EAAE,aAAa,IAAI,oBAAY;AAErC,QAAM,YAAY,aAAa;AAE/B,QAAM,WAAW,UAAU;AAE3B,QAAM,mBAAmB;AAAA,IACvB,CAAC,SAAuB;AACtB,UAAI,OAAO;AACT,cAAM,UAAU,KAAK,SAAS,KAAK,MAAM,KAAK,KAAK;AAAA,IACvD;AAAA,IACA,CAAC,OAAO,SAAS;AAAA,EACnB;AAEA,YAAU,MAAM;AACd,cAAU,GAAG,gBAAgB,gBAAgB;AAE7C,WAAO,MAAM;AACX,gBAAU,IAAI,gBAAgB,gBAAgB;AAAA,IAChD;AAAA,EACF,GAAG,CAAC,OAAO,SAAS,CAAC;AAErB,SAAO;AAAA,IACL;AAAA,EACF;AACF;","names":[]}