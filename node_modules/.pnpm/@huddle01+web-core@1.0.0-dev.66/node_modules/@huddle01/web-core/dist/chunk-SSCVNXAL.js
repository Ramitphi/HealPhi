// src/validators/common.validators.ts
import { z } from "zod";
var ConnectionParameterSchema = z.object({
  roomId: z.string({
    required_error: "Room id must provided"
  }),
  token: z.string({
    required_error: "Token must provided"
  })
});
var GeolocationSchema = z.object({
  country: z.string({
    required_error: "Country must provided"
  }),
  latitude: z.string({
    required_error: "Latitude must provided"
  }),
  longitude: z.string({
    required_error: "Longitude must provided"
  }),
  region: z.string({
    required_error: "Region must provided"
  }),
  globalRegion: z.string({
    required_error: "Global region must provided"
  }),
  ip: z.string({
    required_error: "IP must provided"
  })
});
var VolatileDataMessageSchema = z.object({
  from: z.string(),
  payload: z.unknown(),
  label: z.string().optional(),
  to: z.union([z.literal("*"), z.array(z.string())]).optional()
});
var DataMessageSchema = z.object({
  from: z.string(),
  payload: z.string(),
  label: z.string().optional()
});

export {
  ConnectionParameterSchema,
  GeolocationSchema,
  VolatileDataMessageSchema,
  DataMessageSchema
};
//# sourceMappingURL=chunk-SSCVNXAL.js.map