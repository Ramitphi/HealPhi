// src/helpers/index.ts
var getMediaStreamKind = (stream) => {
  let kind = null;
  const tracks = stream.getTracks();
  for (const track of tracks) {
    if (track.kind === "audio") {
      kind = "audio";
      break;
    } else if (track.kind === "video") {
      kind = "video";
      break;
    }
  }
  if (!kind) {
    throw new Error("Stream Kind Not Found");
  }
  return kind;
};
var getMediaDeviceKind = (track) => {
  if (track.kind === "audio") {
    return "mic";
  } else if (track.kind === "video") {
    const settings = track.getSettings();
    if (settings.displaySurface) {
      return "screen";
    } else {
      return "cam";
    }
  }
  return "cam";
};
var getMediaTrack = (data) => {
  const { stream, kind } = data;
  const tracks = stream.getTracks();
  for (const track of tracks) {
    if (track.kind === kind) {
      return track;
    }
  }
  throw new Error("Track Not Found");
};
var estimateSize = (obj) => {
  const str = JSON.stringify(obj);
  return new TextEncoder().encode(str).length;
};

export {
  getMediaStreamKind,
  getMediaDeviceKind,
  getMediaTrack,
  estimateSize
};
//# sourceMappingURL=chunk-G7SIQXZ4.js.map