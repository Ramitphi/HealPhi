export type CustomStorageOptions = {
    s3?: {
        accessKey: string;
        secret: string;
        region: string;
        bucket: string;
    };
    gcp?: {
        bucket: string;
        credentials: string;
    };
    azure?: {
        accountKey: string;
        accountName: string;
        containerName: string;
    };
};
export declare class Recorder {
    private readonly projectId;
    private readonly apiKey;
    private readonly url;
    constructor(projectId: string, apiKey: string);
    startRecording(data: {
        roomId: string;
        token: string;
        customLayoutUrl?: string;
        customStorage?: CustomStorageOptions;
        layout?: 'grid' | 'spotlight';
    }): Promise<{
        msg: string;
    }>;
    startLivestream(data: {
        roomId: string;
        token: string;
        rtmpUrls: string[];
        customLayoutUrl?: string;
        customStorage?: CustomStorageOptions;
    }): Promise<{
        msg: string;
    }>;
    stop(data: {
        roomId: string;
    }): Promise<{
        msg: string;
    }>;
}
//# sourceMappingURL=index.d.ts.map