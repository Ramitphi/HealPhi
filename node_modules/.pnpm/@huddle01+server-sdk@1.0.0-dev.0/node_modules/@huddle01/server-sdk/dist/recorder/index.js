"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Recorder = void 0;
class Recorder {
    projectId;
    apiKey;
    url = 'https://apira.huddle01.com/api/v1';
    constructor(projectId, apiKey) {
        this.projectId = projectId;
        this.apiKey = apiKey;
    }
    async startRecording(data) {
        const res = await fetch(`${this.url}/recording/start`, {
            body: JSON.stringify({
                roomId: data.roomId,
                token: data.token,
                layout: data.layout || 'grid',
                projectId: this.projectId,
                customLayoutUrl: data.customLayoutUrl,
                customStorage: data.customStorage,
            }),
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-api-key': this.apiKey,
            },
        });
        const d = (await res.json());
        return d;
    }
    async startLivestream(data) {
        const res = await fetch(`${this.url}/recording/start`, {
            body: JSON.stringify({
                roomId: data.roomId,
                token: data.token,
                layout: 'grid',
                projectId: this.projectId,
                rtmpUrls: data.rtmpUrls,
                customLayoutUrl: data.customLayoutUrl,
                customStorage: data.customStorage,
            }),
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-api-key': this.apiKey,
            },
        });
        const d = (await res.json());
        return d;
    }
    async stop(data) {
        const res = await fetch(`${this.url}/recording/stop`, {
            body: JSON.stringify({
                roomId: data.roomId,
            }),
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-api-key': this.apiKey,
            },
        });
        const d = (await res.json());
        return d;
    }
}
exports.Recorder = Recorder;
