{"version":3,"sources":["../src/hooks/useRoom.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nimport useHuddle01 from './useHuddle01';\n\nimport { Room } from '@huddle01/web-core';\n\nimport type {\n  NewPeerJoined,\n  RoomEvents,\n  RoomStates,\n} from '@huddle01/web-core/types';\n\nexport const useRoom = (props?: {\n  onJoin?: (data: { room: Room }) => void;\n  onWaiting?: (data: RoomEvents['room-waiting'][0]) => void;\n  onLeave?: (data: RoomEvents['room-closed'][0]) => void;\n  onFailed?: (data: RoomEvents['room-joined-failed'][0]) => void;\n  onPeerJoin?: (peerId: string) => void;\n  onPeerLeft?: (peerId: string) => void;\n}) => {\n  const { huddleClient } = useHuddle01();\n\n  const room = huddleClient.room;\n\n  const socket = huddleClient.socket;\n\n  const joinRoom = huddleClient.joinRoom;\n\n  const leaveRoom = huddleClient.leaveRoom;\n\n  const closeRoom = huddleClient.closeRoom;\n\n  const kickPeer = room.kickPeer;\n\n  const [state, setState] = useState<RoomStates>(room.state);\n\n  const handleRoomClose = useCallback(\n    (data: RoomEvents['room-closed'][0]) => {\n      if (props?.onLeave) props.onLeave(data);\n\n      if (data.reason === 'LEFT') setState('left');\n      else if (data.reason === 'CLOSED') setState('closed');\n    },\n    [props?.onLeave],\n  );\n\n  const handleRoomJoin = useCallback(() => {\n    if (props?.onJoin) props.onJoin({ room: huddleClient.room });\n\n    setState('connected');\n  }, [props?.onJoin]);\n\n  const handleRoomJoinFailed = useCallback(\n    (data: RoomEvents['room-joined-failed'][0]) => {\n      if (props?.onFailed) props.onFailed(data);\n\n      if (data.status === 'ROOM_ERRORED' || data.status === 'ROOM_NOT_FOUND') {\n        setState('failed');\n      }\n    },\n    [],\n  );\n\n  const handlePeerJoin = useCallback(\n    ({ peer }: NewPeerJoined) => {\n      if (props?.onPeerJoin) {\n        props.onPeerJoin(peer.peerId);\n      }\n    },\n    [props?.onPeerJoin],\n  );\n\n  const handlePeerLeft = useCallback(\n    (peerId: string) => {\n      if (props?.onPeerLeft) props.onPeerLeft(peerId);\n    },\n    [props?.onPeerLeft],\n  );\n\n  const handleSocketConnecting = useCallback(() => {\n    setState('connecting');\n  }, []);\n\n  useEffect(() => {\n    room.once('room-joined', handleRoomJoin);\n\n    room.once('room-closed', handleRoomClose);\n\n    room.once('room-joined-failed', handleRoomJoinFailed);\n\n    socket.once('connecting', handleSocketConnecting);\n\n    props?.onPeerJoin && room.on('new-peer-joined', handlePeerJoin);\n\n    props?.onPeerLeft && room.on('peer-left', handlePeerLeft);\n\n    props?.onWaiting && room.on('room-waiting', props.onWaiting);\n\n    return () => {\n      props?.onPeerJoin && room.off('new-peer-joined', handlePeerJoin);\n\n      props?.onPeerLeft && room.off('peer-left', handlePeerLeft);\n\n      props?.onWaiting && room.off('room-waiting', props.onWaiting);\n\n      room.off('room-joined', handleRoomJoin);\n\n      room.off('room-closed', handleRoomClose);\n\n      room.off('room-joined-failed', handleRoomJoinFailed);\n\n      socket.off('connecting', handleSocketConnecting);\n    };\n  }, [\n    handleRoomJoin,\n    handleRoomClose,\n    handlePeerJoin,\n    handlePeerLeft,\n    handleRoomJoinFailed,\n  ]);\n\n  const closeStreamOfLabel = room.closeStreamOfLabel;\n\n  const muteEveryone = room.muteEveryone;\n\n  return {\n    room,\n    state,\n    joinRoom,\n    leaveRoom,\n    closeRoom,\n    kickPeer,\n    muteEveryone,\n    closeStreamOfLabel,\n  };\n};\n"],"mappings":";;;;;AAAA,SAAS,aAAa,WAAW,gBAAgB;AAY1C,IAAM,UAAU,CAAC,UAOlB;AACJ,QAAM,EAAE,aAAa,IAAI,oBAAY;AAErC,QAAM,OAAO,aAAa;AAE1B,QAAM,SAAS,aAAa;AAE5B,QAAM,WAAW,aAAa;AAE9B,QAAM,YAAY,aAAa;AAE/B,QAAM,YAAY,aAAa;AAE/B,QAAM,WAAW,KAAK;AAEtB,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAqB,KAAK,KAAK;AAEzD,QAAM,kBAAkB;AAAA,IACtB,CAAC,SAAuC;AACtC,UAAI,OAAO;AAAS,cAAM,QAAQ,IAAI;AAEtC,UAAI,KAAK,WAAW;AAAQ,iBAAS,MAAM;AAAA,eAClC,KAAK,WAAW;AAAU,iBAAS,QAAQ;AAAA,IACtD;AAAA,IACA,CAAC,OAAO,OAAO;AAAA,EACjB;AAEA,QAAM,iBAAiB,YAAY,MAAM;AACvC,QAAI,OAAO;AAAQ,YAAM,OAAO,EAAE,MAAM,aAAa,KAAK,CAAC;AAE3D,aAAS,WAAW;AAAA,EACtB,GAAG,CAAC,OAAO,MAAM,CAAC;AAElB,QAAM,uBAAuB;AAAA,IAC3B,CAAC,SAA8C;AAC7C,UAAI,OAAO;AAAU,cAAM,SAAS,IAAI;AAExC,UAAI,KAAK,WAAW,kBAAkB,KAAK,WAAW,kBAAkB;AACtE,iBAAS,QAAQ;AAAA,MACnB;AAAA,IACF;AAAA,IACA,CAAC;AAAA,EACH;AAEA,QAAM,iBAAiB;AAAA,IACrB,CAAC,EAAE,KAAK,MAAqB;AAC3B,UAAI,OAAO,YAAY;AACrB,cAAM,WAAW,KAAK,MAAM;AAAA,MAC9B;AAAA,IACF;AAAA,IACA,CAAC,OAAO,UAAU;AAAA,EACpB;AAEA,QAAM,iBAAiB;AAAA,IACrB,CAAC,WAAmB;AAClB,UAAI,OAAO;AAAY,cAAM,WAAW,MAAM;AAAA,IAChD;AAAA,IACA,CAAC,OAAO,UAAU;AAAA,EACpB;AAEA,QAAM,yBAAyB,YAAY,MAAM;AAC/C,aAAS,YAAY;AAAA,EACvB,GAAG,CAAC,CAAC;AAEL,YAAU,MAAM;AACd,SAAK,KAAK,eAAe,cAAc;AAEvC,SAAK,KAAK,eAAe,eAAe;AAExC,SAAK,KAAK,sBAAsB,oBAAoB;AAEpD,WAAO,KAAK,cAAc,sBAAsB;AAEhD,WAAO,cAAc,KAAK,GAAG,mBAAmB,cAAc;AAE9D,WAAO,cAAc,KAAK,GAAG,aAAa,cAAc;AAExD,WAAO,aAAa,KAAK,GAAG,gBAAgB,MAAM,SAAS;AAE3D,WAAO,MAAM;AACX,aAAO,cAAc,KAAK,IAAI,mBAAmB,cAAc;AAE/D,aAAO,cAAc,KAAK,IAAI,aAAa,cAAc;AAEzD,aAAO,aAAa,KAAK,IAAI,gBAAgB,MAAM,SAAS;AAE5D,WAAK,IAAI,eAAe,cAAc;AAEtC,WAAK,IAAI,eAAe,eAAe;AAEvC,WAAK,IAAI,sBAAsB,oBAAoB;AAEnD,aAAO,IAAI,cAAc,sBAAsB;AAAA,IACjD;AAAA,EACF,GAAG;AAAA,IACD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAED,QAAM,qBAAqB,KAAK;AAEhC,QAAM,eAAe,KAAK;AAE1B,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":[]}