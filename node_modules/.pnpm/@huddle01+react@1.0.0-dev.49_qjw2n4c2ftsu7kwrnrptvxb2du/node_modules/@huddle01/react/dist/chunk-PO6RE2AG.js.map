{"version":3,"sources":["../src/hooks/useRemoteVideo.ts"],"sourcesContent":["import { useRemoteMedia } from './useRemoteMedia';\n\nexport const useRemoteVideo = (props: {\n  peerId: string;\n  onClose?: (reason?: {\n    code: number;\n    tag: string;\n    message: string;\n  }) => void;\n  onPlayable?: (data: {\n    stream: MediaStream;\n    track: MediaStreamTrack;\n    label: 'video';\n  }) => void;\n}) => {\n  const { state, track, stream } = useRemoteMedia({\n    label: 'video',\n    peerId: props.peerId,\n    onStopped: props.onClose,\n    onPlayable: (data) => {\n      props.onPlayable?.({\n        label: 'video',\n        track: data.track,\n        stream: data.stream,\n      });\n    },\n  });\n\n  const isVideoOn = stream ? true : false;\n\n  return {\n    state,\n    track,\n    stream,\n    isVideoOn,\n  };\n};\n"],"mappings":";;;;;AAEO,IAAM,iBAAiB,CAAC,UAYzB;AACJ,QAAM,EAAE,OAAO,OAAO,OAAO,IAAI,eAAe;AAAA,IAC9C,OAAO;AAAA,IACP,QAAQ,MAAM;AAAA,IACd,WAAW,MAAM;AAAA,IACjB,YAAY,CAAC,SAAS;AACpB,YAAM,aAAa;AAAA,QACjB,OAAO;AAAA,QACP,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK;AAAA,MACf,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAED,QAAM,YAAY,SAAS,OAAO;AAElC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":[]}